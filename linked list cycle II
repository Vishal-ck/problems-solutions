# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def detectCycle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        temp=head
        d={}
        c=0
        while temp!=None:
            if temp in d:
                #k=d[temp]
                #print(k)
                return temp
            d[temp]=c
            c+=1
            temp=temp.next
            
            
        
